/* TclInt.pmc
 *  Copyright (C) 2001-2008, The Perl Foundation.
 *  SVN Info
 *     $Id: tclint.pmc 29952 2008-08-02 22:45:13Z allison $
 *  Overview:
 *     These are the vtable functions for the TclInt base class
 *  Data Structure and Algorithms:
 *  History:
 *  References:
 */

#include "parrot/embed.h"

pmclass TclInt
    dynpmc
    extends TclObject
    extends Integer
    does    integer
    group   tcl_group
    hll     Tcl
    maps    Integer
{

    void assign_pmc(PMC* value) {
        STRING * const undef = CONST_STRING(INTERP, "Undef");

        if (VTABLE_isa(INTERP, value, undef))
            pmc_reuse(INTERP, SELF, value->vtable->base_type, 0);
        else
            SELF.set_integer_native(VTABLE_get_integer(INTERP, value));
    }


    /*
     * TclInt shouldn't automatically promote division to float;
     *  also, explicitly use floor when dividing.
     */
    MULTI PMC *divide(Integer value, PMC* dest) {
        FLOATVAL d = VTABLE_get_number(INTERP, value);

        if (d == 0)
            Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_DIV_BY_ZERO,
                "divide by zero");

        if (!dest)
            dest = pmc_new(INTERP, SELF->vtable->base_type);

        VTABLE_set_integer_native(INTERP, dest, floor(SELF.get_integer() / d));
        return dest;
    }
}

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
