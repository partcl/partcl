RM_F    = @rm_f@
PERL    = @perl@
PARROT  = ../../parrot@exe@

BUILD_DIR   = @build_dir@
RECONFIGURE = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe@exe@
#CONDITIONED_LINE(darwin):
#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@

TCL_LIB   = library
PMCBUILD  = $(PERL) @build_dir@/tools/build/dynpmc.pl
OPSBUILD  = $(PERL) @build_dir@/tools/build/dynoplibs.pl
DESTDIR   = @build_dir@/runtime/parrot/dynext
O         = @o@
PMCDIR    = src/pmc
OPSDIR    = src/ops
CLASSDIR  = src/class
LOAD_EXT  = @load_ext@
COPY      = @cp@
RENAME    = @mv@

CC_INC     = @cc_inc@
CC_SHARED  = @cc_shared@
CFLAGS     = $(CC_INC) @ccflags@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@ $(CC_SHARED)
CC         = @cc@


TGE_DIR  = ../../compilers/tge
PERL6GRAMMAR = ../../runtime/parrot/library/PGE/Perl6Grammar.pbc

# can't use $(wildcard) and friends for PMCS, as these have to be in 
# dependency order; with no duplicates. 
PMCS = \
 tclobject \
 tclstring \
 tclint \
 tclfloat \
 tcllist \
 tclarray \
 tcldict

RUNTIME_PIR = $(addprefix runtime/builtin/,$(notdir $(wildcard languages/tcl/runtime/builtin/*.pir)))

DEPS = \
runtime/conversions.pir \
runtime/string_to_list.pir \
runtime/variables.pir \
runtime/options.pir \
src/macros.pir \
src/mathops.pir \
src/returncodes.pasm \
src/grammar/expr/expression.pir \
src/grammar/expr/functions.pir \
src/grammar/expr/parse.pir \
src/grammar/expr/operators.pir \
src/grammar/expr/past2pir.pir \
src/grammar/expr/pge2past.pir \
$(TCL_LIB)/parray.tcl \
$(RUNTIME_PIR)

all: tcl.pbc

tcl.pbc: $(PARROT) pmcs ops runtime/tcllib.pbc src/tclsh.pir
	$(PARROT) --output=tcl.pbc src/tclsh.pir

.SUFFIXES : .pir .pg .tg .tcl

.tg.pir :
	$(PARROT) $(TGE_DIR)/tgc.pir --output=$@ $<

.pg.pir :
	$(PARROT) $(PERL6GRAMMAR) --output=$@ $<

.pir.pbc :
	$(PARROT) --output=$@ $<

.tcl.pir :
	$(PARROT) tcl.pbc $< --pir > $@

CLASSES = \
  $(CLASSDIR)/tclconst.pir \
  $(CLASSDIR)/tclproc.pir

pmcs:
	@cd $(PMCDIR) && $(PMCBUILD) generate $(PMCS)
	@cd $(PMCDIR) && $(PMCBUILD) compile $(PMCS)
	@cd $(PMCDIR) && $(PMCBUILD) linklibs $(PMCS)
	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)" $(PMCS)

# THIS WAS COPIED FROM THE ROOT MAKEFILE
# Passing an empty argument in @ARGV to cc_flags.pl to indicate where extra -Is
# (etc) should go. Otherwise it will insert them after the first space, which
# makes life go horribly wrong if $(CC) contains spaces but can't have -I
# arguments (etc) injected in the middle.
# There is probably a better way to do this, but I can't work it out right now.
.c$(O) :   
	@$(PERL) ../../tools/dev/cc_flags.pl ../../CFLAGS $(CC) "" $(CFLAGS) -I@build_dir@@slash@include @cc_o_out@$@ -c $<

ops: src/binary$(O)
	@cd $(OPSDIR) && $(OPSBUILD) generate tcl
	@cd $(OPSDIR) && $(OPSBUILD) compile  tcl
	@cd $(OPSDIR) && $(OPSBUILD) linklibs tcl ../binary$(O)
	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(DESTDIR)" tcl

runtime/builtins.pir: $(DEPS) tools/gen_builtins.pl
	$(PERL) tools/gen_builtins.pl > runtime/builtins.pir

runtime/tcllib.pbc: $(PARROT) runtime/tcllib.pir runtime/builtins.pir $(CLASSES)
	$(PARROT) --output=runtime/tcllib.pbc runtime/tcllib.pir

# targets for building a standalone tclsh
# (We're not quite ready to make this a default target.)
tclsh@exe@: tcl.pbc $(PBC_TO_EXE)
	$(PBC_TO_EXE) tcl.pbc
	$(RENAME) tcl@exe@ tclsh@exe@

$(PBC_TO_EXE):
	$(MAKE) $(BUILD_DIR) ./pbc_to_exe@exe@

test: tcl.pbc
	prove -r t

spectest: tcl.pbc
	$(PERL) tools/tcl_test.pl

devtest:
	cd t && $(PERL) -e 'use Test::Harness qw($$verbose runtests) ; $$Test::Harness::verbose=1;runtests(glob("*.t"))' && cd ..

CLEANERS = \
tcl.c \
tcl$(O) \
tclsh@exe@ \
tcl.pbc \
runtime/builtins.pir \
"runtime/*.pbc" \
"$(CLASSDIR)/*.pbc" \
"$(PMCDIR)/pmc_*.h" \
"$(PMCDIR)/*_group.h" \
"$(PMCDIR)/*$(LOAD_EXT)" \
"$(PMCDIR)/*.dump" \
#CONDITIONED_LINE(ld_parrot_exe_def):"$(PMCDIR)/*.def" \
"$(PMCDIR)/*.c" \
"$(PMCDIR)/*$(O)" \
"$(PMCDIR)/*.exp" \
"$(PMCDIR)/*.ilk" \
"$(PMCDIR)/*.lib" \
"$(PMCDIR)/*.pdb" \
"t/*.pir" \
"t/*.tcl" \
src/grammar/expr/expression.pir \
src/grammar/expr/past2pir.pir \
src/grammar/expr/pge2past.pir \
"$(OPSDIR)/*.c" \
"$(OPSDIR)/*.h" \
"src/*$(O)" \
"$(OPSDIR)/*$(O)" \
"$(OPSDIR)/*$(LOAD_EXT)" \
"$(OPSDIR)/*.bundle" \
"$(OPSDIR)/*.exp" \
"$(OPSDIR)/*.ilk" \
"$(OPSDIR)/*.lib" \
"$(OPSDIR)/*.pdb" \
"$(TCL_LIB)/*.pir" \
lib/*.pre_c

# that last line should be cleaned up for x-platform.

clean:
	$(RM_F) $(CLEANERS)

realclean: clean
	$(RM_F) examples/Makefile Makefile t_tcl

distclean: realclean

# regenerate the Makefile
Makefile: config/makefiles/root.in
	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=tcl

